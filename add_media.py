#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç SNK
"""

import os
import shutil
import sys
from pathlib import Path

def create_media_structure():
    """–°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫ –¥–ª—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤"""
    media_dirs = [
        'media/videos',
        'media/audio', 
        'media/documents',
        'media/images',
        'media/presentations'
    ]
    
    for dir_path in media_dirs:
        Path(dir_path).mkdir(parents=True, exist_ok=True)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞: {dir_path}")

def add_media_file(file_path, media_type='videos'):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –º–µ–¥–∏–∞—Ñ–∞–π–ª –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –ø–∞–ø–∫—É"""
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
        return False
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é
    ext = Path(file_path).suffix.lower()
    if ext in ['.mp4', '.avi', '.mov', '.mkv']:
        target_dir = 'media/videos'
    elif ext in ['.mp3', '.wav', '.ogg', '.m4a']:
        target_dir = 'media/audio'
    elif ext in ['.pdf', '.doc', '.docx']:
        target_dir = 'media/documents'
    elif ext in ['.jpg', '.jpeg', '.png', '.gif', '.svg']:
        target_dir = 'media/images'
    elif ext in ['.ppt', '.pptx']:
        target_dir = 'media/presentations'
    else:
        target_dir = f'media/{media_type}'
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    Path(target_dir).mkdir(parents=True, exist_ok=True)
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª
    filename = Path(file_path).name
    target_path = os.path.join(target_dir, filename)
    
    try:
        shutil.copy2(file_path, target_path)
        print(f"‚úÖ –§–∞–π–ª –¥–æ–±–∞–≤–ª–µ–Ω: {target_path}")
        return target_path
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

def generate_html_code(file_path, media_type='video'):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML –∫–æ–¥ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞"""
    filename = Path(file_path).name
    ext = Path(file_path).suffix.lower()
    
    if media_type == 'video' or ext in ['.mp4', '.avi', '.mov', '.mkv']:
        return f'''```{{=html}}
<video width="100%" controls>
  <source src="{file_path}" type="video/{ext[1:]}">
  –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ.
</video>
```'''
    
    elif media_type == 'audio' or ext in ['.mp3', '.wav', '.ogg', '.m4a']:
        return f'''```{{=html}}
<audio controls>
  <source src="{file_path}" type="audio/{ext[1:]}">
  –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞—É–¥–∏–æ.
</audio>
```'''
    
    elif ext == '.pdf':
        return f'''```{{=html}}
<iframe src="{file_path}" 
        width="100%" height="600" 
        style="border: none;">
</iframe>
```'''
    
    elif ext in ['.jpg', '.jpeg', '.png', '.gif']:
        return f'''![–û–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è]({file_path}){{width="100%"}}'''
    
    else:
        return f'''[–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª]({file_path}){{target="_blank"}}'''

def main():
    print("üé¨ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç SNK")
    print("=" * 50)
    
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
        print("  python3 add_media.py <–ø—É—Ç—å_–∫_—Ñ–∞–π–ª—É>")
        print("  python3 add_media.py --create-structure")
        print("\n–ü—Ä–∏–º–µ—Ä—ã:")
        print("  python3 add_media.py lecture.mp4")
        print("  python3 add_media.py presentation.pdf")
        print("  python3 add_media.py image.jpg")
        return
    
    if sys.argv[1] == '--create-structure':
        create_media_structure()
        return
    
    file_path = sys.argv[1]
    
    if not os.path.exists(file_path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
        return
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
    target_path = add_media_file(file_path)
    if not target_path:
        return
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –∫–æ–¥
    html_code = generate_html_code(target_path)
    
    print("\nüìã HTML –∫–æ–¥ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏:")
    print("-" * 30)
    print(html_code)
    print("-" * 30)
    
    print("\nüìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
    print("1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ HTML –∫–æ–¥ –≤—ã—à–µ")
    print("2. –í—Å—Ç–∞–≤—å—Ç–µ –≤ –Ω—É–∂–Ω—ã–π .qmd —Ñ–∞–π–ª")
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./auto_deploy.sh")
    print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞ —Å–∞–π—Ç–µ")

if __name__ == "__main__":
    main() 